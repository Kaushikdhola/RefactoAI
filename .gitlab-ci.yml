stages:
  - test
  - build
  - deploy

variables:
  NODE: node:19-bullseye
  FRONTEND_BUILD_PATH: "static/refactor-ui/build/"

code-test:
  image: python:3.11.4-bullseye
  stage: test
  before_script:
    - python3 -m pip install poetry
    - python3 -m poetry install
    - source $(poetry env info --path)/bin/activate
    - cat ${ENVIRONMENT_CONFIG} >> .env
  script:
    - python3 manage.py check
    - python3 manage.py test
  tags:
    - code-test

app-build:
  needs:
    - code-test
  image: $NODE
  stage: build
  before_script:
    - cd static/refactor-ui
    - cat ${FRONTEND_ENVIRONMENT} >> .env
    - yarn install
  script:
    - yarn build
  tags:
    - code-build
  artifacts:
    untracked: false
    when: on_success
    expire_in: "30 days"
    paths:
      - $FRONTEND_BUILD_PATH

backend-deploy:
  needs:
    - code-test
  stage: deploy
  image: alpine:latest
  before_script:
    - chmod og= $SSH_PRIVATE_KEY
    - apk update && apk add openssh-client
  script:
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "./deploy_prod.sh"
  tags:
    - backend-build-deploy
  environment:
    name: production

frontend-deploy:
  needs:
    - backend-deploy
    - app-build
  stage: deploy
  image: $NODE
  before_script:
    - npm install -g netlify-cli
  script:
    - netlify deploy --dir=$FRONTEND_BUILD_PATH --prod
  tags:
    - frontend-build-deploy
